// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TGASDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AppLovinSDK
import Combine
import Dispatch
import Foundation
import LocalAuthentication
import MobileCoreServices
import Security
import Swift
import SystemConfiguration
@_exported import TGASDK
import UIKit
import UniformTypeIdentifiers
import WebKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc public class TGAConfiguration : ObjectiveC.NSObject {
  @objc public var lang: Swift.String
  @objc public var statusBarStyle: UIKit.UIStatusBarStyle
  @objc public var navigationBackImage: UIKit.UIImage?
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum TGALogLevel : Swift.Int {
  case off = 1
  case error = 2
  case info = 3
  case debug = 4
  case warning = 5
  case all = 6
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class TGAUserInfo : ObjectiveC.NSObject {
  @objc public var userId: Swift.String
  @objc public var nickname: Swift.String
  @objc public var avatar: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol TGASdkDelegate : ObjectiveC.NSObjectProtocol {
  @objc func tgaSdkInitSucceed()
  @objc func tgaSdkInitError(_ error: Foundation.NSError)
  @objc func tgaSdkGetUserInfo(completion: @escaping ((TGASDK.TGAUserInfo?) -> Swift.Void))
  @objc func tgaSdkCloseGameCenter()
  @objc func tgaSdkOnLogout()
}
@_inheritsConvenienceInitializers @objc public class TGASdk : ObjectiveC.NSObject {
  @objc public static let shared: TGASDK.TGASdk
  @objc public var configuration: TGASDK.TGAConfiguration
  @objc public func initSdk(env: Swift.String? = nil, appKey: Swift.String, userInfo: TGASDK.TGAUserInfo? = nil, delegate: TGASDK.TGASdkDelegate)
  @objc public func logout()
  @objc public func openGameCenter(vc: UIKit.UIViewController, secUrl: Swift.String? = nil, secTitle: Swift.String? = nil, theme: Swift.String? = nil)
  @objc public func setLogLevel(level: TGASDK.TGALogLevel)
  @objc override dynamic public init()
  @objc deinit
}
extension TGASDK.TGALogLevel : Swift.Equatable {}
extension TGASDK.TGALogLevel : Swift.Hashable {}
extension TGASDK.TGALogLevel : Swift.RawRepresentable {}
